pico-8 cartridge // http://www.pico-8.com
version 8
__lua__
sfx(26)
--sfx
sfx_spark = 24
sfx_smoke = 25

--load lavaflow-jtq

gridw = 128           --grid parameters(for pico-9 screen)
gridh = 128

mapw = 8              --how many tiles we want our map to have
maph = 8

preprows = 2          --how many rows prepared before entering the screen

tilew = gridw/mapw    --calculation of how the width and length of tiles
tileh = gridh/maph
map_t = 0


row = {}
mappy = {}            --mappy since map is a special token

maprate = 30          --how long until the map changes

lava = {}
lava2 = {}

types = {"plant","person","house","rock"}

hearts = {}
score = 0

--title globals--
banner = {}
loading = false

--loading globals--
loading_maprate = 150

--interface globals--

--shorter than particles
sparks = {}

--camera shakes
shakes = {}

--debug variables
cx = 64
cy = 64
wh = 1
vdxy = 1
--end debug

-- use push/pop/trans/shake_cam
-- to manipulate camera
camx = 0
camy = 0
pcamx = 0 -- prev cam pos
pcamy = 0
-- cam stack
cstack = {{0,0}}

trans1 = {4,6,8,10} -- selectable sprites
trans2 = {12,14}
transmove = {64,66,68,70}

petrans = {38,40,38,42} -- person
pltrans = {32,34,36} -- plant
htrans = {96,98,100} -- house
rtrans = {46} -- rock

hearttrans = {44,60}

--------------------------------------------

--init--

function _init()
 _update = title_update
 _draw = title_draw
 title_init()
end

--title--

function banner_init()
 banner.pixels = {}
 banner.y = 32
 banner.x = 14
 banner.h = 32
 banner.w = 100
 cls()
 spr(128, 0,0,13,4)
 for j=0,32 do
  banner.pixels[j] = {}
  for i=0, 100 do
   banner.pixels[j][i] = pget(i,j)
  end
 end
 cls()
end

function title_init()
 camera(0,0)
 cstack = {{0,0}}
 maprate = 30
 t = 0
 map_t = 0
 lava = {}
 loading_maprate = 150
 loading = false
 banner_init()
 graphics_init()
 createmap()
 music(0)
end

function title_update()
 t += 1
 if rnd(30) > 29 then
  x = banner.x + rnd(banner.w)
  y = banner.y + rnd(banner.h)
  spawn_spark(1, x, y,
              ((x-banner.x)-banner.w/2)/(banner.w/2)*.6,
              -- -abs(((y-banner.y)-banner.h/2)/(banner.h/2)*.4),
              0,
              banner.w/10, banner.h/10, 1, 0,0)
 end
 update_sparks()
 if btn(5) then
  loading = true
  loading_init()
  _update = loading_update
  _draw = loading_draw
 end
end

function title_draw()
 cls(12)

 game_draw()
 draw_sparks()
 draw_disregard_cam(draw_banner)

 if not loading then
  m = "press x to erupt!"

  if t%45 > 15 then
   circfill(64-(#m*4)/2, 97, 3, 7)
   rectfill(64-(#m*4)/2, 94, 61-(#m*4)/2+(#m*4),94 + 6,7)
   circfill(61-(#m*4)/2+(#m*4), 97, 3, 7)
   print(m,64-(#m*4)/2, 95, 1)
  elseif (t-2)%45 > 11 then
   -- circfill(65-(#m*4)/2, 97, 3, 6)
   -- rectfill(65-(#m*4)/2, 94, 61-(#m*4)/2+(#m*4),94 + 6, 6)
   -- circfill(60-(#m*4)/2+(#m*4), 97, 3, 6)
   print(m,64-(#m*4)/2, 95, 2)
  end
 end
 if score != 0 then
  draw_disregard_cam(draw_score)
 end
end

function draw_banner()
 for j=0,banner.h do for i=0,banner.w do
  if banner.pixels[j][i] != 0 then
   if not loading then
    pset(i+banner.x,
         banner.y+2+j+cos(t/33+i/60)*.2
         --+cos(t/33+i/60)*1.5
         ,flr(cos(t/33+(i+30)/60))+10)
    pset(i+banner.x,
         banner.y+1+j+cos(t/33+i/60)*.2
         --+cos(t/33+i/60)*1.5
         ,9)
   end
   pset(i+banner.x,
        banner.y+j+cos(t/33+i/60)*1.5,
        banner.pixels[j][i])
  end
 end end
 text = {"f","l","o","w"}
 for i=1, #text do
  args = {s=text[i], x=cos(t/20+i/12)*.7+28+i*14-cos(t/20+i/6)*.7, y=banner.y+38, c=9}
  draw_outline(print_string, 10, args)
  print_string(args)
  args.y-=1
  args.c-=1
  print_string(args)
 end
end

function print_string(args)
 print(args.s, args.x, args.y, args.c)
end

--loading--
function loading_init()
 t = 0
 map_t = 0
 sfx(30)
 loading = true
 music(42)
 create_lava(flr(gridw/2), 0)
end

function loading_update()
 t += 1
 map_t = t
 loading_maprate -= .5

 game_maprate = maprate
 maprate = loading_maprate
 if t % maprate == 0 then
  for l in all(lava) do
   l.y += tileh
   create_lava2(l.x,flr(l.y - tileh),l.sw,l.sh,12,trans2)
  end
 end
 update_lavas2()
 update_lavas()
 maprate = game_maprate
 update_sparks()

 if loading_maprate <= maprate*2.5 then
  game_init(mappy, lava)
  _update = game_update
  _draw = game_draw
 else
  banner.y -= .5
 end
 if time_to_move_cam() then
  map_t = 0
 end
end

function loading_draw()
 cls(12)
 game_draw()
 draw_disregard_cam(draw_banner)
end

--interfaces--

function graphics_init()
 sparks = {}
 shakes = {}
 camx = 0
 camy = 0
 pcamx = 0
 pcamy = 0
 cstack = {{0,0}}
end

-- returns true/false at rnd with
-- percentage given (0 <= p <= 1)
function weighted_choice(p)
 return rnd(1)<p
end

-- returns x +- dx/2
function vary(i, di)
 return i+rnd(abs(di))-abs(di)/2
end

--camera interface

-- pushes cam trans matrix to stack
-- if x,y given, same as
--  push_cam()
--  trans_cam(x,y)
function push_cam(x, y)
 x = x or 0
 y = y or 0
 add(cstack, {camx, camy})
 trans_cam(x, y)
end

function pop_cam()
 prev = cstack[#cstack]
 camx = prev[1]
 camy = prev[2]
 del(cstack, prev)
 trans_cam(0, 0)
end

-- all camera modification should
-- use this function
-- this and draw_disregard_cam
-- should be the only occurence
-- of the camera function
function trans_cam(x, y)
 camx += x
 camy += y
 if camx != pcamx or camy != pcamy then
   camera(camx, camy)
 end
 pcamx = camx
 pcamy = camy
end

-- takes up to 3 variables
function draw_disregard_cam(f, a,b,c)
 camera(0,0)
 f(a,b,c)
 trans_cam(0,0)
end
-- end camera interface


-- shake interface

-- x,y: shake more horizontally or vertically
function add_shake(x, y)
 local sh = {}
  sh.x = x
  sh.y = y
 add(shakes, sh)
end

function update_shakes()
 foreach(shakes, update_shake)
end

function update_shake(sh)
 sh.x *= .8 + vary(.1, .2)
 sh.y *= .8 + vary(.1, .2)
 if (abs(sh.x) + abs(sh.y)) < 1 then
  del(shakes, sh)
 end
end

-- shake's draw functions (apply/reset)
-- need to wrap affected drawing code
-- because they push/pop the camera
function apply_shakes()
 foreach(shakes, apply_shake)
end

function apply_shake(sh)
 push_cam(vary(0,  sh.x),
          vary(0,  sh.y))
end

function reset_shakes()
 foreach(shakes, reset_shake)
end

function reset_shake(sh)
 pop_cam()
end
--end shake interface


--particle interface

--spawn a spark at x,y
--tp (type) is probability of 0 (flame), 1 (smoke)
--dx,dx is init velocity
--if w/h given, spawn at random
--in area in box of (x,y), (x+w, y+h)
--dx/dy is effected by spark's spawn pos in w,h area
--if n given, spawn n sparks
--vdx,vdy if given, specify the dx,dy variation
function spawn_spark(tp, x, y, dx, dy, w, h, n, vdx, vdy)
 n = n or 1
 if n < 1 then
  n = 1
 end
 w = w or 0
 h = h or 0
 dx = dx or 0
 dy = dy or 0
 vdx = vdx or 0
 vdy = vdy or 0
 for i=1,n do
  local s = {}
  s.smoke = weighted_choice(tp)
  s.float = dx == nil and dy == nil
  s.x     = x+rnd(w)
  s.y     = y+rnd(h)
  s.r     = rnd(2)+1
  cenx = x + w/2
  ceny = y + h/2
  s.dx    = vary(dx, vdx)
  s.dy    = vary(dy, vdy)
  s.dx   += abs(s.dx/2)*(s.x-cenx)/(w/2)
  s.dy   += abs(s.dy/2)*(s.y-ceny)/(h/2)
  if s.smoke then
   s.parts = {}
   for p=0,3+rnd(4) do
    local p = {}
     p.w = 2+rnd(3)
     p.h = 3+rnd(5)
     p.x = vary(s.x, p.w)
     p.y = vary(s.y, p.h)
     p.dx = vary(s.dx, p.w*rnd(.5))
     p.dy = vary(s.dy, p.h*rnd(.5))
     p.r = (rnd(3)*p.h)/(3+4)
     p.hp = rnd(100)
    add(s.parts, p)
   end
  end
  add(sparks, s)
 end
end

function update_sparks()
 foreach(sparks, update_spark)
end

function update_spark(s)
 s.x += s.dx
 s.y += s.dy
 s.y -= tileh/maprate
 s.dx *= .8 + vary(.1, .2)
 s.dy *= .8 + vary(.1, .2)
 if not s.smoke then
  s.r *= .9
  if s.r < .001 then
   del(sparks, s)
  end
 else -- smoke
  s.r *= 1.05
  for p in all(s.parts) do
   p.x += p.dx
   p.y += p.dy
   p.y -= tileh/maprate
   p.dx *= .8 + vary(.1, .2)
   p.dy *= .8 + vary(.1, .2)
   p.dy -= vary(.05,.05)
   p.x += s.dx
   p.y += s.dy
   p.r += vary(.05, .05)
   p.hp *= .8
   if p.hp < .001 then
    del(s.parts, p)
   end
  end
  if #s.parts == 0 then
   del(sparks, s)
  end
 end
end

function draw_sparks()
 foreach(sparks, draw_flame) -- don't want embers on top of smoke
 foreach(sparks, draw_smoke)
end

function draw_smoke(s)
 if s.smoke then
   for p in all(s.parts) do
    circfill(p.x, p.y, p.r, 6)
    circfill(p.x, p.y-p.r/3, p.r*.8, 7)
   end
  end
end

function draw_flame(s)
 if not s.smoke then
  circfill(s.x, s.y, 0, 4)
  circfill(s.x, s.y, s.r-.5, 9)
  circfill(vary(s.x, s.r-1),
           vary(s.y, s.r-1),
           s.r-1.3, 10)
  circfill(vary(s.x, s.r-1.5),
           vary(s.y, s.r-1.5),
           s.r-1.7, 7)
 end
end
-- end particle interface


-- debug
function udebug()
 if btn(4) then
  if t%10 then
   add_shake(wh*(cx)/128,
             wh*(128-cx)/128)
  end
  spawn_spark(0.5, cx,cy,0,0,wh,wh,wh/2,vdxy,vdxy)
 end
 if btn(5) and btn(4) then
  vdxy = max(0, vdxy-.5)
 elseif btn(5) then
  vdxy = min(20, vdxy+.5)
 end

 if btn(0) then
  cx = max(0,cx-1)
 end
 if btn(1) then
  cx = min(127,cx+1)
 end
 if btn(2) then
  wh = max(0,wh-1)
 end
 if btn(3) then
  wh = min(127,wh+1)
 end
end

function ddebug()
 circ(cx,cy,1,3)
end
-- end debug


-- example usage for particle/shake interfaces

-- function _init()
--  t = 0
--  graphics_init()
-- end

-- function _draw()
--  cls()
--  apply_shakes() --need to apply before draw
--  draw_lava() --draw lava first
--  draw_sparks() --before sparks
--  ddebug() -- for debug cursor control
--  reset_shakes() --need to reset after draw
-- end

-- function _update()
--  t += 1
--  update_shakes() -- update camera shakes at any time
--  update_sparks() --update sparks first
--  update_lava() --before lava
--  udebug() -- for debug cursor control
-- end

function create_lava(x,y,sw,sh,mode,transform,movable,dire,lt,coold,indi)
 local flow = {}
  flow.x = x or flr(gridw/2)          --for x position
  flow.y = y or flr(tileh*2)          --for y position
  flow.sw = sw or 2                   --for sprite width
  flow.sh = sh or 2                   --for sprite height
  flow.mode = mode or 4               --for current step in animation
  flow.transform = transform or trans1--for type of tranformation
  flow.movable = movable or true      --for declaring if movable
  flow.dire = dire or false           --for indicating direction
  flow.lt = lt or 0                   --for personal timing
  flow.coold = coold or 0             --for cooldown on movement
  flow.indi = indi or 0
 add(lava,flow)
end

function update_lavas()
 foreach(lava,update_lava)
end

function update_lava(fl)
 fl.coold -= 1
 if time_to_move_cam() then
  create_lava2(fl.x,flr(fl.y - tileh),fl.sw,fl.sh,12,trans2)
  fl.indi = 0
 end

 if (fl.lt <= 0) then
  fl.transform = trans1
  fl.mode = fl.transform[flr((map_t%maprate)*#fl.transform/maprate)+1] --divided by total transformations + starting sprite number
 else                                                              --if moving horizontally
  fl.transform = transmove
  fl.mode = fl.transform[flr((map_t%maprate)*#fl.transform/maprate)+1]
  fl.lt -= 1
 end

 if (fl.movable == true) then
  if (btn(0)) then
   if (fl.x > 0) then
    if (fl.coold <= 0) and (fl.indi <= 0) then
     fl.x -= tilew
     fl.dire = true
     create_lava2(fl.x + tilew,fl.y,fl.sw,fl.sh,12,trans2)
     fl.lt = flr((maprate - map_t%maprate)/2)
     fl.coold = flr(maprate/tilew)*9                      --indicates how long before it can move again
     fl.indi -= 1                                         --indicates direction of movement
    end
   end
  end
  if (btn(1)) then
   if (fl.x < gridw - tilew) then
    if (fl.coold <= 0) and (fl.indi >= 0) then
     fl.x += tilew
     fl.dire = false
     create_lava2(fl.x - tilew,fl.y,fl.sw,fl.sh,12,trans2)
     fl.lt = flr((maprate - map_t%maprate)/2)
     fl.coold = flr(maprate/tilew)*9
     fl.indi += 1
    end
   end
  end
 end
 if rock_collision(fl.x, fl.y) then
  sfx(29)
  hurt_lava()
 end
end

function draw_lavas()
 foreach(lava,draw_lava)
end

function draw_lava(fl)
 spr(fl.mode,fl.x,fl.y,fl.sw,fl.sh,fl.dire)
end

function rock_collision(x,y)
 c = flr(x/tilew) + 1
 r = flr(y/tileh) + 1
 if not mappy[r][c].thing then
  return false
 end
 if mappy[r][c].thing.type == "rock" then
  mappy[r][c].thing.type = "hitrock"
  return true
 end
 return false
end

function create_lava2(x,y,sw,sh,mode,transform,lt)
 local flow2 = {}
  flow2.x = x or gridw/2
  flow2.y = y or tileh
  flow2.sw = sw or 2
  flow2.sh = sh or 2
  flow2.mode = mode or 12
  flow2.transform = transform or trans2
  flow2.lt = lt or 0
 add(lava2,flow2)
end

function update_lavas2()
 foreach(lava2,update_lava2)
end

function update_lava2(fl2)
 fl2.lt += 1
 fl2.mode = fl2.transform[flr((fl2.lt%maprate)*#fl2.transform/maprate)+1]
 if time_to_move_cam() then
  fl2.y -= tileh
  if (fl2.y < 0) then
   del(lava2,fl2)
  end
 end
end

function draw_lavas2()
 foreach(lava2,draw_lava2)
end

function draw_lava2(fl2)
 spr(fl2.mode,fl2.x,fl2.y,fl2.sw,fl2.sh)
end

function createrow(spawn_chance)               --creates particular row, each tiles has own color
 spawn_chance = spawn_chance or 0
 obts_left = flr(mapw/2)
 local row = {}
  for c = 1,mapw do
   if rnd(1) < spawn_chance then
    choice = types[flr(rnd(#types))+1]

    add(row, create_tile(create_object(choice)))
   else
    add(row, create_tile())
   end
  end
 return row
end

function update_rows()
 for rn,row in pairs(mappy) do
  for cn,tile in pairs(row) do
   update_tile(cn,rn,tile)
  end
 end
end

function create_tile(thing) --returns random color
 local tl = {}
  tl.thing = thing
  tl.bg = create_bg_tile()
 return tl
end

function create_bg_tile()
 local bg = {}
  choices = {78, 94, 93, 94, 77, 79, 95} --{14,15,30,31}
  -- assumes large tile is square
  for i=1,(tilew/8)*(tilew/8) do
   ci = flr(rnd(#choices)+1)
   c = choices[ci]
   --del(choices, c)
   add(bg,
       {n=c,
        fh=weighted_choice(.5),
        fv=weighted_choice(.5)})
  end
 return bg
end

function draw_bg(x,y, bg)
 nr = tilew/8
 r = 0
 c = 0
 for tl in all(bg) do
  spr(tl.n, c*8+x, r*8+y, 1,1, tl.fh, tl.fv)
  if c == nr-1 then
   r += 1
  end
  c = (c+1)%nr
 end
end

function move_map()                 --moves the map and generates a new row
 for change = 1,(#mappy-1) do
  mappy[change] = mappy[change + 1]
 end
 mappy[#mappy] = createrow(15/maprate)
end

function drawtile(c,r,tile)             --draws the tile
 x = tilew * (c-1)
 y = tileh * (r-1)
 bg = tile.bg
 draw_bg(x,y,bg)
 -- if tile.thing then
 --  tile.thing.draw(x,y,tile.thing)
 -- end
end

function update_tile(c,r,tile)
 if tile.thing then
  tile.thing.update(c,r,tile)
 end
end

--objects

function create_object(tp)
 cdefs = {house  = create_house,  plant = create_plant,
          person = create_person, rock  = create_rock}
 udefs = {house  = update_house,  plant = update_plant,
          person = update_person, rock  = update_rock}
 ddefs = {house  = draw_house,    plant = draw_plant,
          person = draw_person,   rock  = draw_rock}
 local ob   = cdefs[tp]()
  ob.type = tp
  ob.update = udefs[tp]
  ob.draw   = ddefs[tp]
  ob.burning = false
  ob.life = 100
 return ob
end

function create_person()
 local p = {}
  p.x = rnd(4)-2
  p.y = rnd(4)-2
  p.left = weighted_choice(.5)
  p.up = weighted_choice(.5)
 return p
end

function update_person(cn,rn,p)
 --p.x += rnd()
end

function draw_person(x,y,p)
 --sp = petrans[(flr(t/10)%#petrans) + 1]
 --spr(sp, x+p.x, y+p.y, 2,2, p.left, p.up)
end

function create_house()
 local h = {}

 return h
end

function update_house(cn,rn,h)

end

function draw_house(x,y,h)

end

function create_plant()
 local p = {}
  p.transform = pltrans
 return p
end

function update_plant(cn,rn,p)

end

function draw_plant(x,y,p)

end

function create_rock()
 local r = {}
  r.flipped = weighted_choice(.5)
 return r
end

function update_rock(cn,rn,r)

end

function draw_rock(x,y,r)
 spr(rtrans[1],x,y,2,2,r.flipped)
end

function draw_score()
 draw_outline(_draw_score, 0)
 _draw_score()
end
function _draw_score()
 print(score, 2,2, 7)
end

-- from
-- one room dungeon by trasevol_dog
-- #ld37 - theme was 'one room'
function draw_outline(draw,c,arg)
 all_colors_to(c)

 camera(0-1,0)
 draw(arg)
 camera(0+1,0)
 draw(arg)
 camera(0,0-1)
 draw(arg)
 camera(0,0+1)
 draw(arg)

 camera(0,0)
 all_colors_to()
end

function all_colors_to(c)
 if c then
  for i=0,15 do
   pal(i,c)
  end
 else
  for i=0,15 do
   pal(i,i)
  end
 end
end
-----------------------------------

function create_life(hcount)
 hc = hcount or 3
 for i = 1,hc do
  local heart = {}
   heart.x = gridw - (i*tilew/2)
   heart.y = 1
   heart.sw = 1
   heart.sh = 1
   heart.mode = hearttrans[1]
   heart.transform = hearttrans
  add(hearts,heart)
 end
end

function draw_lives()
 foreach(hearts,draw_life)
end

function draw_life(heart)
 spr(heart.mode,heart.x,heart.y,heart.sw,heart.sh)
end

function hurt_lava()
 del(hearts,hearts[#hearts])
end

function createmap()          --creates rows
 for r = #mappy+1,(maph+preprows) do
  mappy[r] = createrow()
 end
end

function time_to_move_cam()
 return map_t >= maprate
end

function game_init(imap, ilava)
 t = 0
 map_t = 0
 score = 0
 --cls()
 --allow other states to load map
 if imap and #imap >= maph+preprows then
  mappy = imap
 else
  createmap()
 end
 music(28)
 -- testing interfaces
 graphics_init()
 -- end testing interfaces
 --allow other states to spawn player
 if ilava then
  lava = ilava
 else
  create_lava()
 end
 create_life()
end

function game_update()
 t += 1
 map_t += 1
 score += 1/30
 maprate -= .01
 update_lavas2()
 update_lavas()
 update_rows()
 update_shakes()
 update_sparks()
 -- testing interfaces
 if time_to_move_cam() then
  move_map()
  -- don't pop first!
  -- lucky we have {0,0} in the stack
  -- after a graphics_init
  pop_cam() -- revert translations
  push_cam() -- save reverted state
 else
  trans_cam(0, tileh/maprate)
 end
 if t%flr(rnd(30))==0 then
  r = flr(rnd(maph))+1
  c = flr(rnd(mapw))+1
  if rnd(10)<1 then
   --confirmed shake doesn't cause map creep
   add_shake(rnd(rnd(20)),rnd(20))
  else
   smoke = flr(rnd(2))
   if smoke==1 then
    sfx(sfx_smoke)
   else
    sfx(sfx_spark)
   end
   spawn_spark(smoke,
               c*tilew, r*tileh,
               vary(0,3), vary(0,3),
               tilew, tileh,
               rnd(10),
               rnd(3), rnd(3))
  end
 end
 if time_to_move_cam() then
  map_t = 0
 end
 -- end testing interfaces
 if (#hearts <= 0) then
  sfx(31)
  title_init()
  music(36)
  _update = title_update
  _draw = title_draw
 end
end

function game_draw()
 --cls(12)
 -- testing interfaces
 apply_shakes()
 -- end testing interfaces
 for rn,row in pairs(mappy) do
  for cn,tile in pairs(row) do
   drawtile(cn,rn,tile)
  end
 end
 draw_lavas2()
 draw_lavas()
 for rn,row in pairs(mappy) do
  for cn,tile in pairs(row) do
   if tile.thing then
    x = tilew * (c-1)
    y = tileh * (r-1)
    tile.thing.draw(tilew * (cn-1),
                    tileh * (rn-1),
                    tile.thing)
   end
  end
 end
 -- testing interfaces
 draw_disregard_cam(draw_sparks)
 reset_shakes()
 if score != 0 then
  draw_disregard_cam(draw_score)
 end
 -- end testing interfaces
 draw_disregard_cam(draw_lives)
end

__gfx__
000000000000000011111111111111119942111249421224a9444449a7a94499421112999421111249499aaa94222449a9499942444444994224211222444444
00000000000000001111111111111111a994221249942449942222249a9422499422249994422224242449994211122494244421222222442112422211222244
007007000000000022222222222222227a9944249999499942111112494211249944499999944449121224994211111242122442111111222111244211111122
0007700000000000444444444444444407aa9949999999a79421111249942124999999999a999999421112499421112421111242111111111111124211111111
000770000000000000000000000000000077a99999aa9a70a942112499942124a9444449a7a94499211111249422112421111124221111121111112421111111
0070070000000000999999999999999900007a9aaa77a700a994224999994249942222249a942249421222249944222421112224442111242111224211111112
00000000000000009999999999999999000007a7770070007a9944999a99949a4211111249421124942444499999424921124444994222492112444422111224
0000000000000000aaaaaaaaaaaaaaaa000000700000000007a99999a7a999a79421111249942124a94999999a99949a422442249a9444444224422244222444
000000000000000077777777777777770000000000000000007aa999a77aaa70a9421124999421247a944499a7a9999a94442112499442224444211124444222
00000000000000000000000000000000000000000000000000077aaa70077700a994224999994249a94222499a99444999942111244221114222111112422111
00000000000000000000000000000000000000000000000000000777000000007a9944999999949a942111249994222494421111242111112111111124211111
000000000000000000000000000000000000000000000000000000000000000007a9999aaaa999a7421111124942111242211111242111112111111124211111
0000000000000000000000000000000000000000000000000000000000000000007aaaa7777aaa70942111124994211242111111244211112111111124421111
00000000000000000000000000000000000000000000000000000000000000000007777000077700a94211249994212442111122492121222111111124211122
00000000000000000000000000000000000000000000000000000000000000000000000000000000a99422499aa9424994222244994242444211121124221124
000000000000000000000000000000000000000000000000000000000000000000000000000000007a994499a77a949aa94444999a9494994422242244421124
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008800880000000000000000000000000
00000000000000000000000000000000000550000000000000000000eef000000000000000000000000000000000000087e88ee8000000000000000000000000
00000b000bb00000000003000330000000005000000000000000044eefff0000000004400eee0000000004400eef00008e7eeee8000000000000000000660000
00003bb0bb3300000000633033660000000055000005000000004444effff00000004444eeeff00000004444eefff00008eeee80000000000000000006666000
00bb033bb330bb00003306633660330000000550055500000004444440ffff00000444444eefff00000444444effff00008ee800000000000000000666666600
003bb03b300bb30000633063600336000055005555000000000444444d0ff00000044444400ff00000044444480fff0000088000000000000000005666666500
0033bb0330bb330000663306603366000005500550000000000e4444d50000000000444488d000000000444488d0f00000000000000000000000665566555500
00033bb3bbb330000006633633366000000055550055000000eee44d000000000000e4488ddd00000000e4488d50000000000000000000000006666555555500
00003333b33300000000666636660000000005555550000000eff0d500000000000eee88d0d50000000eee08d000000008800880000000000066665555555500
00000033330000000000006666000000000000055000000000ffff0000000000000eff0d50000000000eee0ddd00000082280828000000000066665555555500
000000000000000000000000000000000000000000000000000ffff000000000000ffff000000000000efff0d500000082800828000000000066555555555100
0000000000000000000000000000000000000000000000000000ff00000000000000ffff000000000000fff00000000008808280000000000065555155555100
000000000000000000000000000000000000000000000000000000000000000000000ff00000000000000f000000000000808800000000000055555115551100
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008000000000000015551115551100
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001111111111000
4997000000000000994449a7000000002499994449a700009424449aa942249a94212494211112494421124421111244444b44444b22b2234323332333333333
249a7000000000009422249a7000000012499422249a70004212224994211249942112442111124944211124211112224442b4243b4334333b33333333333333
2499a7000000000042111249a7000000124942111249a70042111224942111244211112421111124421111242111111142443444233333b23b33333433323333
12499a700000000042122499a7000000124942122499a700211112499421224942111124421112494211111242111111344334bb333333b2333333b333333333
2499a7000000000094244999a7000000124994244999a700211124999942449a42111124421121244211111242112122444422b432b4223433333333333333b3
4999a70000000000a949999a700000002499a949999a700021122499a99499a74211124994224249421111124422422443b4443433b343333333333333333333
99999a70000000007a9999a770000000449a7a99999a70004224499a7a9999a74211249a9444499a2111112442444444422343442432243bb332343333333333
44999a7000000000a944999aa70000009999a944999a700094499999a994499a42112499422224992111212421222224444444424333343b3333333333333333
22499a7000000000942249999a70000099999422499a7000a999449999422499212244442111124922224242111111124222b2234b23b3233333333333333333
112499a700000000421124999a700000999942112499a700a994224994211249424422421111124912442442111111122b4434423b33bb333333323333333333
12499a7000000000421112499a700000249942111249a700a94212494211112494421242111111241242124211111124234434423bb333b43333333333333333
1249a7000000000042111249a7000000124942111249a700942112494211112494211244221111242421124421111112422422b233333bb3333b33b3333b3333
249a70000000000042112499a7000000124942112499a7009421124942111249942111244421112442111124421111124244223433b33333333343b333333333
499a7000000000004212499a7000000012494212499a700042111124942124994211111249421124211111124211111244b4442233bb33333333333333333333
99a7000000000000942499a7000000002499942499a7000094221249a942499a9421111249422249211111124211112422322444b33234b3b3333333b3333333
9a70000000000000a949aa70000000004999a949aa7000004214249a7a949aa7a94222249994449a42211224442222444444444b343333bb3333333333333333
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000044400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000444440000000000990000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00004444224000000000a9a60000000000000a9600009a0000000000000000000000000000000000000000000000000000000000000000000000000000000000
000444422424000000000a76600a9000000007a66009a00000000000000000000000000000000000000000000000000000000000000000000000000000000000
0044442224424000000006660057a00000000666005a700000000000000000000000000000000000000000000000000000000000000000000000000000000000
00024222444420000000665505655000000066550565500000000000000000000000000000000000000000000000000000000000000000000000000000000000
00002244442400000000665555650000000066555565000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00002244142000000000655005600000000065500560000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000001111111111124000000421111111111240000000000004211111111111111111111112404211111111111110000000000000000000000000000000000
00000011111111111112400000421111111111124000000000442111111111111111111111112404211111111111111000000000000000000000000000000000
00000111111111111112400000421111111777112440000004221111111111111111111111112400421777111111111100000000000000000000000000000000
00001117771111111124000000421111117aaa711224000042117771111111111177711111111240427aaa711111111110000000000000000000000000000000
0001117aaa711111112400000421111117a999a7111240004217aaa71111111117aaa7111111112427a999a71111111111000000000000000000000000000000
001117a999a7111112400000042111117a99999a71112400427a999a711111117a999a71111111127a99999a7111111111100000000000000000000000000000
011117a999a711111240000042111117a999a999a7111240427a999a711111117a999a7111111117a999a999a711111111110000000000000000000000000000
011117a999a71111240000004211117a999a7a999a711124217a999a711111117a999a711111117a999a7a999a71111111200000000000000000000000000000
011117a999a7111240000004211117a999a717a999a71112117a999a711111117a999a71111117a999a717a999a7111112400000000000000000000000000000
011117a999a711240000004211117a999a71117a999a7111117a999a711111117a999a7111117a999a71117a999a711124000000000000000000000000000000
011117a999a71240000004211117a999a7111117a999a711117a999a711111117a999a711117a999a7111117a999a71124000000000000000000000000000000
011117a999a7240000004211117a999a711111117a999a71117a999a711111117a999a71117a999a711111117a999a7124000000000000000000000000000000
011117a999a7400000042111117a999a711111117a999a71117a999a711111117a999a71117a999a711111117a999a7240040000000000000000000000000000
011117a999a7000000421111117a999a711111117a999a71117a999a711111117a999a71117a999a711111117a999a7240420000000000000000000000000000
011127a999a7000004211111117a9999a7777777a9999a71117a999a711111117a999a71117a9999a7777777a9999a7400420000000000000000000000000000
012247a999a7000042111111117a99999aaaaaaa99999a71117a999a711111117a999a71117a99999aaaaaaa99999a7404210000000000000000000000000000
024407a999a7000004211111117a99999999999999999a71117a999a711112227a999a72227a99999999999999999a7004210000000000000000000000000000
040007a999a7444000421111117a99999999999999999a71117a999a711124447a999a74447a99999999999999999a7042110000000000000000000000000000
000007a999a7222400042111117a99999aaaaaaa99999a71117a999a722240007a999a70007a99999aaaaaaa99999a7042110000000000000000000000000000
000007a9999a711240004211117a9999a7777777a9999a711117a999a7440047a999a744447a9999a7777777a9999a7421110000000000000000000000000000
000007a99999a77777774211117a999a711111117a999a7111117a999a70047a999a7222227a999a711111117a999a7211110000000000000000000000000000
000007a999999aaaaaaa7421117a999a711111117a999a71111117a999a747a999a71111117a999a711111117a999a7111110000000000000000000000000000
000047a9999999999999a742117a999a711111117a999a711111127a999a7a999a711111117a999a711111117a999a7111110000000000000000000000000000
0044217aa99999999999a742117a999a711111117a999a7111111247a999a999a7111111117a999a711111117a999a7111110000000000000000000000000000
002211177a9999999999a742117a999a711111117a999a71111224007a99999a71111111117a999a711111117a999a7111110000000000000000000000000000
0011111117aaaaaaaaaa70042117aaa71111111117aaa7111124400427a999a7111111111117aaa71111111117aaa71111100000000000000000000000000000
00011111117777777777400042117771111111111177711112400042117aaa711111111111117771111111111177711111000000000000000000000000000000
00001111111111111111240042111111111111111111111124004421111777111111111111111111222222211111111110000000000000000000000000000000
00000111111111111111240042111111111111111111111140042211111111111111111111122222444444422111111100000000000000000000000000000000
00000011111111111111240042111111111111111111111100042111111111111111111111244444000000044211111000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000

__gff__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
4546000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5556000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
010c00001955519505195351955517505195351955515505175551750517535175550050517535175550050515555155051553515555195051553515555155051c555175051c5351c555005051c5351c55500505
010c0000016250060501625006053162525605256052560509625006050962521605396252160521605006050b625006050b625236053b6252360523605006050462504605046250460534625046050462534625
010c000015735157351573515735157351573515735157351c7351c7351c7351c7351c7351c7351c7351c73519735197351973519735197351973519735197351773517735177351773517735177351773517735
010c00001955519505195351953517505195351953515505175350000017535175350000017535175350000015535000001553515535000001553515535000001c5351553517535195351c535155351753519535
010c0000016250060501625006053162525605256052560509625006050962521605396252160521605006050b625006050b625236053b6252360523605006050462504625046250462534625046250462534625
010c000015735157351573515735157351573515735157351c7351c7351c7351c7351c7351c7351c7351c73519735197051972519735197051972519735046253462528605046252870534625000050000500005
01140000155551555517505175551c5551c5551f5051d55518555185551a5051a55517555175550050118555155551555517505175551c5551c5551f5051d55518555185551a5051a55517555175550050118555
01140008100331000310003100033d635316033160331603116031160311603116030d60331603316033160300603006030060300603006030060300603006030060300603006030060300603006030060300603
01140000157411574115741157411574115741157411574115741157411574115741157411574115741157411c7411c7411c7411c7411c7411c7411c7411c7411c7411c7411c7411c7411c7411c7411c7411c741
01140000155551555517505175551c5551c5551f5051d55518555185551a5051a55517555175550050118555155551555517505175551c5551c5551f5051d5551855518505185551a50517555175051755518505
01140000100331000310003100033d635316033160331603100331000310003100033d635316033160331603100331000310003100033d635316033160331603100031000310003100033d605316033160331603
01140000157411574115741157411574115741157411574115741157411574115741157411574115741157411c7411c7411c7411c7411c7411c7411c7411c7411c7011c7011c7011c7011c7011c7011c7011c701
01180000187341873118731187311873118731187311873118731187311873118735007010070100701007011c7341c7311c7311c7311c7311c7311c7311c7311c7311c7311c7311c73500701007010070100701
011800000006400061000610006100061000610006100061000610006100061000610006100061000610006104061040610406104061040610406104061040610406104061040610406104061040610406104061
010c00201852118521185211852118521185211c5011c5011c5211c5211c5211c5211c5211c5211c5011c5011f5211f5211f5211f5211f5211f52115501155011f5211f5211c5211c52118521185211552115521
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
010100002d6442c6342e6342764426644246442b63401644206342a6340f6340e63404144156442861416634011240b614136441a604076241d604096343460437604026040f60403604316042b6040860402004
010200000261006620076300a6400a6400a6400964009630086300863008620086200862007610066100661006610066100661005610056100561004610036100361002610026100261002610016100161001600
00020000160571d0572205725057260572605726054260542c0542f054310543205432054320543205432054310542f0542e0542d05125051200412e012150020d00207002050020100201002000020000200002
000a0000126101a6102261026610256101e610196101761017610186102c5302c5302e5302f540325400000000000000000000000000000000000000000000000000000000000000000000000000000000000000
011a0000155051555517505175551c5551c5551f5051d55518555185551a5051a5551755517555005011855515505155050050100501005010050100501005010050100501005010050100501005010050100501
001000000d07419574130740c57313603133031350313503135031350313503135031350313503135031350313503135031350313503135031050313503135030000300003000030000300003000030000300003
000c0000020501505006050090500d05013310160500e0501105015050190501c3101e0501005015050170501a0501e05023050273102b0302f000350003c0003f0003f000000000000000000000000000000000
011000001745417314154541531413454133140040400404004040040400404004040040400404004040040400404004040040400404004040040400404004040040400404004040040400404004040040400404
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__music__
00 024c4248
00 02404048
00 02414148
00 0541414a
01 02014048
00 02014048
00 02014048
00 0504434a
00 02010048
00 02010048
00 02010048
00 05040348
00 02410048
00 02410048
00 02410048
00 05410348
00 02010048
00 02010048
00 02010048
00 05040348
00 42010042
00 42010042
00 42010042
00 42040342
00 02010048
00 02010048
00 02010048
02 05040348
00 06474648
00 09474648
01 06074b48
00 090a4b48
00 06070848
00 06070848
00 06070848
02 090a0b48
00 0d484040
00 0d4c4040
01 0d0c4040
00 0d0c4040
00 0d0c0e40
02 0d0c0e40
04 1e404040
00 1f404040
00 40404040
00 40404040
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000

